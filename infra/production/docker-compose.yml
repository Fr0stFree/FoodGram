name: "foodgram"

services:
  db:
    image: postgres:13.0-alpine
    container_name: db
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data/
    networks:
      - foodgram-network
    env_file:
      - ./db.env
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

  backend_1:
    build: ../../backend/
    container_name: backend_1
    restart: always
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    networks:
      - foodgram-network
    depends_on:
      - db
    env_file:
      - ./backend.env
      - ./db.env
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  backend_2:
    build: ../../backend/
    container_name: backend_2
    restart: always
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    networks:
      - foodgram-network
    depends_on:
      - db
    env_file:
      - ./backend.env
      - ./db.env
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  frontend:
    build: ../../frontend/
    container_name: frontend
    env_file:
      - ./frontend.env
    volumes:
      - frontend_build:/app/build/

  nginx:
    image: nginx:1.21.3-alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - static_value:/var/html/static
      - media_value:/var/html/media
      - frontend_build:/usr/share/nginx/html/
      - ./nginx.conf.template:/etc/nginx/templates/default.conf.template
    networks:
      - foodgram-network
    restart: always
    env_file:
      - ./nginx.env
    depends_on:
      - backend_1
      - backend_2
      - frontend

volumes:
  static_value:
  media_value:
  db_data:
  frontend_build:

networks:
  foodgram-network:
